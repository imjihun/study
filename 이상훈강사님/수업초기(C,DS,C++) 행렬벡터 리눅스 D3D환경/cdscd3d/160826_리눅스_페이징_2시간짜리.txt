//////////////////////////////////
2^12 = 4KB <- 	페이지의 최소단위
		DRAM의 최소단위
4KB씩 할당해야 하기 때문에 이런 크기가 정해져 있는것들은 블록디바이스이다.

8KB, 16KB가 최소단위면 속도를 올리고
4KB 밑이 최소단위면 공간활용



/////////////////////////////////////////////


범용 운영체제들만(윈도우 리눅스 맥) 페이징을 한다. (펌웨어들은 페이징을 안한다.)

****************중요** 모든 프로세스는 자기 자신의 고유한 4GB메모리를 가진다.
						(4GB는 VM을 의미)
32비트는 1:3(커널:유저)메모리영역할당
64비트는 1:1(커널:유저)메모리영역할당


(32비트 주소크기 4바이트)ex>
int a=10;->

	c0이 경계선
&a = 0x bf76AC10(VM주소)

Paging은 VM의 주소값을 10bit 10bit 12bit로 쪼갠다.
1011 1111 0111 0110 1010 1100 0001 0000
    10비트  |	10	|	12
    765     |	894	|	3088

10비트배열(1024개)의 인덱스 765로 들어가고
10비트배열(1024개)의 인덱스 894로 들어가고
12비트배열(4096개(PM))의 인덱스 3088로 들어간 곳에 10을 저장
PM(DRAM)의 최소단위 4KB = 페이지


->64비트 주소크기 8바이트// 하지만 윈도우 64비트는 표준을 지키지 않기 때문에 포인터가 4바이트이다.

//////////////
sticky bit는 파일에 붙으면 파일을 스왑영역(디스크)에 저장해놓고 필요할때마다 불러온다.
페이징이 줄어들어 성능이 향상된다.(실행시킬 파일이 클경우 많은 페이징을 요구하기때문데 이기법사용)
주로쓰는 파일을 스티키비트를 붙여놔도 성능향상
디스크를 읽으려면 보통 시간이 많이 걸리지만
스왑영역은 별다른 I/O연산 없이 그대로 파일을 읽어오기 때문에 속도가 빠르다.


./a.out & <- 백그라운드 실행

공유메모리나 세마포어로 공유되는 메모리는
커널쪽에서 할당해주는 물리메모리.